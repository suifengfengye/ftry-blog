{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1498211720923},{"_id":"themes/landscape/_config.yml","hash":"218c5fb76666696c42dc86e2de4711e6b80befbf","modified":1498211720929},{"_id":"themes/landscape/package.json","hash":"d07f326588fef82f1d23ae3101c9ddfff34c132f","modified":1498211720957},{"_id":"themes/landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1498211720924},{"_id":"source/_posts/React-MarkdownEditor.md","hash":"cfaf34e39c5a42ec98d0be1938e6801d40ce8ea7","modified":1498718305253},{"_id":"source/_posts/React-start.md","hash":"1285ce7ccf4eb41fca847b8a628b185940196220","modified":1498706795206},{"_id":"source/_posts/我的第一篇博客文章.md","hash":"f98415e5421859b294f6041dce348a939f8f09c8","modified":1498451997548},{"_id":"themes/landscape/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1498211720930},{"_id":"themes/landscape/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1498211720930},{"_id":"themes/landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1498211720931},{"_id":"themes/landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1498211720931},{"_id":"themes/landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1498211720932},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1498211720938},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1498211720938},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1498211720952},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1498211720952},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1498211720953},{"_id":"themes/landscape/layout/layout.ejs","hash":"5d86bc48b0f1bdce9a2bb548c2f8e7a4f50d499a","modified":1498211720953},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1498211720956},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1498211720956},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1498211720957},{"_id":"themes/landscape/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1498211720958},{"_id":"themes/landscape/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1498211720924},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1498211720940},{"_id":"source/_posts/hello-world.md","hash":"d5d239258ab6220a315411aaf3ea72c0e8aff092","modified":1498447139701},{"_id":"themes/landscape/README.md","hash":"e7cc82dc79596f36ba05a8139e7d6b2dfc4ae5f9","modified":1498211720929},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"6faefe07f3d64e21c7743276e0f55ee1544f9d86","modified":1498211720944},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1498211720944},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"a7faab4f3601b28107af5b1095b3966c2f88fec8","modified":1498211720940},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"3beb0d164acacb6f21e1ca2038158a74ab4a73e4","modified":1498211720940},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1498211720946},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"5cf2b8a1148e6f8c4bd9ca9e3b84c7e5a59d56bc","modified":1498211720941},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1498211720949},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1498211720950},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1498211720950},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"16800f85ffb036d2644a26e02facd61acb3706e9","modified":1498211720951},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1498211720951},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1498211720951},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"89998e6b2929c4ff5093bbf6b86d611d7420be52","modified":1498211720945},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"148bdf714dd1a7bf55e571f13808ceae079200cc","modified":1498211720945},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1498211720990},{"_id":"themes/landscape/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1498211720959},{"_id":"themes/landscape/source/css/_variables.styl","hash":"8b63ea3c7199524b9a1541075c6f8fb2c0d0ea3d","modified":1498211720974},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1498211720990},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1498211720995},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1498211720996},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1498211720996},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1498211720991},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1498211721009},{"_id":"themes/landscape/source/css/style.styl","hash":"4a3e64ee8dad5834860c30b4176882eff628ca6b","modified":1498211720989},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1498211720946},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1498211720947},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1498211720947},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1498211720948},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1498211720948},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1498211720949},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1498211721008},{"_id":"themes/landscape/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1498211721011},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1498211720961},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1498211720969},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"ac19f1621305ca9f6a7b74acd211a4c0d88690bd","modified":1498211720970},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1498211720969},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1498211720971},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1498211720970},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1498211720972},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1498211720971},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1498211720973},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1498211720972},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1498211720979},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1498211721010},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1498211720986},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1498211720980},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1498211720960},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"e291bc8c5f0c21080baa549d5d9ef2f39a871ea7","modified":1498211720960},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1498211720997},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1498211721007},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1498211721007},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1498211720998},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1498211721006},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1498211720985},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1498211721008},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1498211720984},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1498211720989}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"markdown编辑器(React)","date":"2017-06-29T06:37:02.000Z","tag":null,"_content":"\n*dangerouslySetInnerHTML* is React's replacement for using innerHTML in the browser DOM.\nYou can set HTML directly from React, but you have to type out *dangerouslySetInnerHTML* and pass an object with a *__html* key, to remind yourself that is dangerous.\n\n[codepen地址](https://codepen.io/suifengfengye/pen/MorPBY)\n\n```\nclass MarkdownEditor extends React.Component {\n  constructor () {\n    super();\n    this.state = {\n      text: ''\n    };\n  }\n  render () {\n    return (\n      <div className=\"markdown-editor\">\n        <p>Input</p>\n        <textarea onChange={(e) => {this.handleChange(e)}}></textarea>\n        <p>Output</p>\n        <div dangerouslySetInnerHTML={this.getRawMarkup()}></div>\n      </div>\n    );\n  }\n  handleChange (e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  getRawMarkup () {\n    const md = new Remarkable();\n    return { __html: md.render(this.state.text) }\n  }\n\n}\n\n\nReactDOM.render(\n  <MarkdownEditor />,\n  document.getElementById('root')\n);\n```","source":"_posts/React-MarkdownEditor.md","raw":"---\ntitle: markdown编辑器(React)\ndate: 2017-06-29 14:37:02\ntag:\n---\n\n*dangerouslySetInnerHTML* is React's replacement for using innerHTML in the browser DOM.\nYou can set HTML directly from React, but you have to type out *dangerouslySetInnerHTML* and pass an object with a *__html* key, to remind yourself that is dangerous.\n\n[codepen地址](https://codepen.io/suifengfengye/pen/MorPBY)\n\n```\nclass MarkdownEditor extends React.Component {\n  constructor () {\n    super();\n    this.state = {\n      text: ''\n    };\n  }\n  render () {\n    return (\n      <div className=\"markdown-editor\">\n        <p>Input</p>\n        <textarea onChange={(e) => {this.handleChange(e)}}></textarea>\n        <p>Output</p>\n        <div dangerouslySetInnerHTML={this.getRawMarkup()}></div>\n      </div>\n    );\n  }\n  handleChange (e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  getRawMarkup () {\n    const md = new Remarkable();\n    return { __html: md.render(this.state.text) }\n  }\n\n}\n\n\nReactDOM.render(\n  <MarkdownEditor />,\n  document.getElementById('root')\n);\n```","slug":"React-MarkdownEditor","published":1,"updated":"2017-06-30T02:26:57.931Z","_id":"cj4j88qvy0000icqtqe66am0z","comments":1,"layout":"post","photos":[],"link":"","content":"<p><em>dangerouslySetInnerHTML</em> is React’s replacement for using innerHTML in the browser DOM.<br>You can set HTML directly from React, but you have to type out <em>dangerouslySetInnerHTML</em> and pass an object with a <em>__html</em> key, to remind yourself that is dangerous.</p>\n<p><a href=\"https://codepen.io/suifengfengye/pen/MorPBY\" target=\"_blank\" rel=\"external\">codepen地址</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">class MarkdownEditor extends React.Component &#123;</div><div class=\"line\">  constructor () &#123;</div><div class=\"line\">    super();</div><div class=\"line\">    this.state = &#123;</div><div class=\"line\">      text: &apos;&apos;</div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;</div><div class=\"line\">  render () &#123;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;div className=&quot;markdown-editor&quot;&gt;</div><div class=\"line\">        &lt;p&gt;Input&lt;/p&gt;</div><div class=\"line\">        &lt;textarea onChange=&#123;(e) =&gt; &#123;this.handleChange(e)&#125;&#125;&gt;&lt;/textarea&gt;</div><div class=\"line\">        &lt;p&gt;Output&lt;/p&gt;</div><div class=\"line\">        &lt;div dangerouslySetInnerHTML=&#123;this.getRawMarkup()&#125;&gt;&lt;/div&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">  handleChange (e) &#123;</div><div class=\"line\">    this.setState(&#123;</div><div class=\"line\">      text: e.target.value</div><div class=\"line\">    &#125;);</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  getRawMarkup () &#123;</div><div class=\"line\">    const md = new Remarkable();</div><div class=\"line\">    return &#123; __html: md.render(this.state.text) &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">  &lt;MarkdownEditor /&gt;,</div><div class=\"line\">  document.getElementById(&apos;root&apos;)</div><div class=\"line\">);</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><em>dangerouslySetInnerHTML</em> is React’s replacement for using innerHTML in the browser DOM.<br>You can set HTML directly from React, but you have to type out <em>dangerouslySetInnerHTML</em> and pass an object with a <em>__html</em> key, to remind yourself that is dangerous.</p>\n<p><a href=\"https://codepen.io/suifengfengye/pen/MorPBY\" target=\"_blank\" rel=\"external\">codepen地址</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">class MarkdownEditor extends React.Component &#123;</div><div class=\"line\">  constructor () &#123;</div><div class=\"line\">    super();</div><div class=\"line\">    this.state = &#123;</div><div class=\"line\">      text: &apos;&apos;</div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;</div><div class=\"line\">  render () &#123;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;div className=&quot;markdown-editor&quot;&gt;</div><div class=\"line\">        &lt;p&gt;Input&lt;/p&gt;</div><div class=\"line\">        &lt;textarea onChange=&#123;(e) =&gt; &#123;this.handleChange(e)&#125;&#125;&gt;&lt;/textarea&gt;</div><div class=\"line\">        &lt;p&gt;Output&lt;/p&gt;</div><div class=\"line\">        &lt;div dangerouslySetInnerHTML=&#123;this.getRawMarkup()&#125;&gt;&lt;/div&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">  handleChange (e) &#123;</div><div class=\"line\">    this.setState(&#123;</div><div class=\"line\">      text: e.target.value</div><div class=\"line\">    &#125;);</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  getRawMarkup () &#123;</div><div class=\"line\">    const md = new Remarkable();</div><div class=\"line\">    return &#123; __html: md.render(this.state.text) &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">  &lt;MarkdownEditor /&gt;,</div><div class=\"line\">  document.getElementById(&apos;root&apos;)</div><div class=\"line\">);</div></pre></td></tr></table></figure>"},{"title":"React入门","date":"2017-06-23T09:13:02.000Z","_content":"\n# React learn\n\n## React\n\nReact is a javascript library for building user interface.\n\n## A Simple Component\n\nReact components implement a * render() * method that takes input data and return what to display.\nInput data that is passed into the component can be accessed via * this.props *.\n\n```javascript\nclass HelloMessage extends React.Component{\n  render () {\n    return (<div>Hello, {this.props.name}</div>)\n  }\n}\nReactDOM.render(\n  <HelloMessage name=\"黄剑枫\" />,\n  document.getElementById('root')\n)\n\n```\n\n## A Statefull Component\n\nIn addition to taking input data, a component can maintain internal state data (accessed via this.state).\nWhen component's state data changes, the rendered markup will be updated by re-invoking * render() *.\n\n[codepen地址](https://codepen.io/suifengfengye/pen/pwpxvG)\n\n```\n\nclass Timer extends React.Component {\n  constructor () {\n    super();\n    this.state = {\n       second: 0,\n      timeInterval: null\n    };\n  }\n  render () {\n    return (\n      <div>{this.state.second}</div>\n    );\n  }\n  // 组件绑定时的钩子函数\n  componentDidMount () {\n    this.startTimeTick();\n  }\n\n  startTimeTick () {\n    this.state.timeInterval =\n      setInterval(() => {\n        this.timeTick();\n      }, 1000)\n  }\n\n  destroyTimeTick () {\n    if (this.state.timeInterval) {\n      clearInterval(this.state.timeInterval);\n    }\n  }\n\n  timeTick () {\n    this.setState({\n      second: this.state.second + 1\n    });\n  }\n\n  // 组件从DOM删除之前的钩子函数\n  componentWillUnmount () {\n    this.destroyTimeTick();\n  }\n\n}\n\nReactDOM.render(\n  <Timer />,\n  document.getElementById('root')\n);\n\n```\n# A Application\n\nUsing props and state, we can put together a small Todo application.\n\n[codepen地址](https://codepen.io/suifengfengye/pen/gRoBpX)\n\n```javascript\n\nclass TodoApp extends React.Component {\n  constructor () {\n    super();\n    this.state = {\n      items: [],\n      text: ''\n    };\n  }\n  render () {\n    return (\n      <div>\n        <h1>TODO</h1>\n        <TodoList items={this.state.items}/>\n        <form onSubmit={(e) => {\n            this.handleSubmit(e)\n          }}>\n          <input type=\"text\" onChange={(e) => this.handleChange(e)} value={this.state.text}/>\n          <button>Add #{this.state.items.length + 1}</button>\n        </form>\n      </div>\n    )\n  }\n\n  handleSubmit (e) {\n    e.preventDefault();\n    const text = this.state.text;\n    this.setState((prevState) => ({\n      items: prevState.items.concat(text),\n        text: ''\n    }));\n  }\n\n  handleChange (e) {\n    this.setState({\n      text: e.target.value\n    })\n  }\n}\n\nclass TodoList extends React.Component {\n  render () {\n    return (\n      <ul>\n        {\n          this.props.items.map((item) => {\n            return <li>{item}</li>\n          })\n        }\n       </ul>\n    );\n  }\n}\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n```\n\n","source":"_posts/React-start.md","raw":"---\ntitle: React入门\ndate: 2017-06-23 17:13:02\ntags:\n---\n\n# React learn\n\n## React\n\nReact is a javascript library for building user interface.\n\n## A Simple Component\n\nReact components implement a * render() * method that takes input data and return what to display.\nInput data that is passed into the component can be accessed via * this.props *.\n\n```javascript\nclass HelloMessage extends React.Component{\n  render () {\n    return (<div>Hello, {this.props.name}</div>)\n  }\n}\nReactDOM.render(\n  <HelloMessage name=\"黄剑枫\" />,\n  document.getElementById('root')\n)\n\n```\n\n## A Statefull Component\n\nIn addition to taking input data, a component can maintain internal state data (accessed via this.state).\nWhen component's state data changes, the rendered markup will be updated by re-invoking * render() *.\n\n[codepen地址](https://codepen.io/suifengfengye/pen/pwpxvG)\n\n```\n\nclass Timer extends React.Component {\n  constructor () {\n    super();\n    this.state = {\n       second: 0,\n      timeInterval: null\n    };\n  }\n  render () {\n    return (\n      <div>{this.state.second}</div>\n    );\n  }\n  // 组件绑定时的钩子函数\n  componentDidMount () {\n    this.startTimeTick();\n  }\n\n  startTimeTick () {\n    this.state.timeInterval =\n      setInterval(() => {\n        this.timeTick();\n      }, 1000)\n  }\n\n  destroyTimeTick () {\n    if (this.state.timeInterval) {\n      clearInterval(this.state.timeInterval);\n    }\n  }\n\n  timeTick () {\n    this.setState({\n      second: this.state.second + 1\n    });\n  }\n\n  // 组件从DOM删除之前的钩子函数\n  componentWillUnmount () {\n    this.destroyTimeTick();\n  }\n\n}\n\nReactDOM.render(\n  <Timer />,\n  document.getElementById('root')\n);\n\n```\n# A Application\n\nUsing props and state, we can put together a small Todo application.\n\n[codepen地址](https://codepen.io/suifengfengye/pen/gRoBpX)\n\n```javascript\n\nclass TodoApp extends React.Component {\n  constructor () {\n    super();\n    this.state = {\n      items: [],\n      text: ''\n    };\n  }\n  render () {\n    return (\n      <div>\n        <h1>TODO</h1>\n        <TodoList items={this.state.items}/>\n        <form onSubmit={(e) => {\n            this.handleSubmit(e)\n          }}>\n          <input type=\"text\" onChange={(e) => this.handleChange(e)} value={this.state.text}/>\n          <button>Add #{this.state.items.length + 1}</button>\n        </form>\n      </div>\n    )\n  }\n\n  handleSubmit (e) {\n    e.preventDefault();\n    const text = this.state.text;\n    this.setState((prevState) => ({\n      items: prevState.items.concat(text),\n        text: ''\n    }));\n  }\n\n  handleChange (e) {\n    this.setState({\n      text: e.target.value\n    })\n  }\n}\n\nclass TodoList extends React.Component {\n  render () {\n    return (\n      <ul>\n        {\n          this.props.items.map((item) => {\n            return <li>{item}</li>\n          })\n        }\n       </ul>\n    );\n  }\n}\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n```\n\n","slug":"React-start","published":1,"updated":"2017-06-30T02:28:13.785Z","_id":"cj4j88qvy0001icqth5f63oq7","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"React-learn\"><a href=\"#React-learn\" class=\"headerlink\" title=\"React learn\"></a>React learn</h1><h2 id=\"React\"><a href=\"#React\" class=\"headerlink\" title=\"React\"></a>React</h2><p>React is a javascript library for building user interface.</p>\n<h2 id=\"A-Simple-Component\"><a href=\"#A-Simple-Component\" class=\"headerlink\" title=\"A Simple Component\"></a>A Simple Component</h2><p>React components implement a <em> render() </em> method that takes input data and return what to display.<br>Input data that is passed into the component can be accessed via <em> this.props </em>.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloMessage</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span></span>&#123;</div><div class=\"line\">  render () &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> (&lt;div&gt;Hello, &#123;this.props.name&#125;&lt;/div&gt;)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">  &lt;HelloMessage name=\"黄剑枫\" /&gt;,</div><div class=\"line\">  document.getElementById('root')</div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<h2 id=\"A-Statefull-Component\"><a href=\"#A-Statefull-Component\" class=\"headerlink\" title=\"A Statefull Component\"></a>A Statefull Component</h2><p>In addition to taking input data, a component can maintain internal state data (accessed via this.state).<br>When component’s state data changes, the rendered markup will be updated by re-invoking <em> render() </em>.</p>\n<p><a href=\"https://codepen.io/suifengfengye/pen/pwpxvG\" target=\"_blank\" rel=\"external\">codepen地址</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">class Timer extends React.Component &#123;</div><div class=\"line\">  constructor () &#123;</div><div class=\"line\">    super();</div><div class=\"line\">    this.state = &#123;</div><div class=\"line\">       second: 0,</div><div class=\"line\">      timeInterval: null</div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;</div><div class=\"line\">  render () &#123;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;div&gt;&#123;this.state.second&#125;&lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">  // 组件绑定时的钩子函数</div><div class=\"line\">  componentDidMount () &#123;</div><div class=\"line\">    this.startTimeTick();</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  startTimeTick () &#123;</div><div class=\"line\">    this.state.timeInterval =</div><div class=\"line\">      setInterval(() =&gt; &#123;</div><div class=\"line\">        this.timeTick();</div><div class=\"line\">      &#125;, 1000)</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  destroyTimeTick () &#123;</div><div class=\"line\">    if (this.state.timeInterval) &#123;</div><div class=\"line\">      clearInterval(this.state.timeInterval);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  timeTick () &#123;</div><div class=\"line\">    this.setState(&#123;</div><div class=\"line\">      second: this.state.second + 1</div><div class=\"line\">    &#125;);</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  // 组件从DOM删除之前的钩子函数</div><div class=\"line\">  componentWillUnmount () &#123;</div><div class=\"line\">    this.destroyTimeTick();</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">  &lt;Timer /&gt;,</div><div class=\"line\">  document.getElementById(&apos;root&apos;)</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<h1 id=\"A-Application\"><a href=\"#A-Application\" class=\"headerlink\" title=\"A Application\"></a>A Application</h1><p>Using props and state, we can put together a small Todo application.</p>\n<p><a href=\"https://codepen.io/suifengfengye/pen/gRoBpX\" target=\"_blank\" rel=\"external\">codepen地址</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TodoApp</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">constructor</span> () &#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>();</div><div class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;</div><div class=\"line\">      <span class=\"attr\">items</span>: [],</div><div class=\"line\">      <span class=\"attr\">text</span>: <span class=\"string\">''</span></div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;</div><div class=\"line\">  render () &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> (</div><div class=\"line\">      &lt;div&gt;</div><div class=\"line\">        &lt;h1&gt;TODO&lt;/h1&gt;</div><div class=\"line\">        &lt;TodoList items=&#123;this.state.items&#125;/&gt;</div><div class=\"line\">        &lt;form onSubmit=&#123;(e) =&gt; &#123;</div><div class=\"line\">            this.handleSubmit(e)</div><div class=\"line\">          &#125;&#125;&gt;</div><div class=\"line\">          &lt;input type=\"text\" onChange=&#123;(e) =&gt; this.handleChange(e)&#125; value=&#123;this.state.text&#125;/&gt;</div><div class=\"line\">          &lt;button&gt;Add #&#123;this.state.items.length + 1&#125;&lt;/button&gt;</div><div class=\"line\">        &lt;/form&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    )</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  handleSubmit (e) &#123;</div><div class=\"line\">    e.preventDefault();</div><div class=\"line\">    const text = this.state.text;</div><div class=\"line\">    this.setState((prevState) =&gt; (&#123;</div><div class=\"line\">      items: prevState.items.concat(text),</div><div class=\"line\">        text: ''</div><div class=\"line\">    &#125;));</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  handleChange (e) &#123;</div><div class=\"line\">    this.setState(&#123;</div><div class=\"line\">      text: e.target.value</div><div class=\"line\">    &#125;)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">class TodoList extends React.Component &#123;</div><div class=\"line\">  render () &#123;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;ul&gt;</div><div class=\"line\">        &#123;</div><div class=\"line\">          this.props.items.map((item) =&gt; &#123;</div><div class=\"line\">            return &lt;li&gt;&#123;item&#125;&lt;/li&gt;</div><div class=\"line\">          &#125;)</div><div class=\"line\">        &#125;</div><div class=\"line\">       &lt;/ul&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">  &lt;TodoApp /&gt;,</div><div class=\"line\">  document.getElementById('root')</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"React-learn\"><a href=\"#React-learn\" class=\"headerlink\" title=\"React learn\"></a>React learn</h1><h2 id=\"React\"><a href=\"#React\" class=\"headerlink\" title=\"React\"></a>React</h2><p>React is a javascript library for building user interface.</p>\n<h2 id=\"A-Simple-Component\"><a href=\"#A-Simple-Component\" class=\"headerlink\" title=\"A Simple Component\"></a>A Simple Component</h2><p>React components implement a <em> render() </em> method that takes input data and return what to display.<br>Input data that is passed into the component can be accessed via <em> this.props </em>.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloMessage</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span></span>&#123;</div><div class=\"line\">  render () &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> (&lt;div&gt;Hello, &#123;this.props.name&#125;&lt;/div&gt;)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">  &lt;HelloMessage name=\"黄剑枫\" /&gt;,</div><div class=\"line\">  document.getElementById('root')</div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<h2 id=\"A-Statefull-Component\"><a href=\"#A-Statefull-Component\" class=\"headerlink\" title=\"A Statefull Component\"></a>A Statefull Component</h2><p>In addition to taking input data, a component can maintain internal state data (accessed via this.state).<br>When component’s state data changes, the rendered markup will be updated by re-invoking <em> render() </em>.</p>\n<p><a href=\"https://codepen.io/suifengfengye/pen/pwpxvG\" target=\"_blank\" rel=\"external\">codepen地址</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">class Timer extends React.Component &#123;</div><div class=\"line\">  constructor () &#123;</div><div class=\"line\">    super();</div><div class=\"line\">    this.state = &#123;</div><div class=\"line\">       second: 0,</div><div class=\"line\">      timeInterval: null</div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;</div><div class=\"line\">  render () &#123;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;div&gt;&#123;this.state.second&#125;&lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">  // 组件绑定时的钩子函数</div><div class=\"line\">  componentDidMount () &#123;</div><div class=\"line\">    this.startTimeTick();</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  startTimeTick () &#123;</div><div class=\"line\">    this.state.timeInterval =</div><div class=\"line\">      setInterval(() =&gt; &#123;</div><div class=\"line\">        this.timeTick();</div><div class=\"line\">      &#125;, 1000)</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  destroyTimeTick () &#123;</div><div class=\"line\">    if (this.state.timeInterval) &#123;</div><div class=\"line\">      clearInterval(this.state.timeInterval);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  timeTick () &#123;</div><div class=\"line\">    this.setState(&#123;</div><div class=\"line\">      second: this.state.second + 1</div><div class=\"line\">    &#125;);</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  // 组件从DOM删除之前的钩子函数</div><div class=\"line\">  componentWillUnmount () &#123;</div><div class=\"line\">    this.destroyTimeTick();</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">  &lt;Timer /&gt;,</div><div class=\"line\">  document.getElementById(&apos;root&apos;)</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<h1 id=\"A-Application\"><a href=\"#A-Application\" class=\"headerlink\" title=\"A Application\"></a>A Application</h1><p>Using props and state, we can put together a small Todo application.</p>\n<p><a href=\"https://codepen.io/suifengfengye/pen/gRoBpX\" target=\"_blank\" rel=\"external\">codepen地址</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TodoApp</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">constructor</span> () &#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>();</div><div class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;</div><div class=\"line\">      <span class=\"attr\">items</span>: [],</div><div class=\"line\">      <span class=\"attr\">text</span>: <span class=\"string\">''</span></div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;</div><div class=\"line\">  render () &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> (</div><div class=\"line\">      &lt;div&gt;</div><div class=\"line\">        &lt;h1&gt;TODO&lt;/h1&gt;</div><div class=\"line\">        &lt;TodoList items=&#123;this.state.items&#125;/&gt;</div><div class=\"line\">        &lt;form onSubmit=&#123;(e) =&gt; &#123;</div><div class=\"line\">            this.handleSubmit(e)</div><div class=\"line\">          &#125;&#125;&gt;</div><div class=\"line\">          &lt;input type=\"text\" onChange=&#123;(e) =&gt; this.handleChange(e)&#125; value=&#123;this.state.text&#125;/&gt;</div><div class=\"line\">          &lt;button&gt;Add #&#123;this.state.items.length + 1&#125;&lt;/button&gt;</div><div class=\"line\">        &lt;/form&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    )</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  handleSubmit (e) &#123;</div><div class=\"line\">    e.preventDefault();</div><div class=\"line\">    const text = this.state.text;</div><div class=\"line\">    this.setState((prevState) =&gt; (&#123;</div><div class=\"line\">      items: prevState.items.concat(text),</div><div class=\"line\">        text: ''</div><div class=\"line\">    &#125;));</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  handleChange (e) &#123;</div><div class=\"line\">    this.setState(&#123;</div><div class=\"line\">      text: e.target.value</div><div class=\"line\">    &#125;)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">class TodoList extends React.Component &#123;</div><div class=\"line\">  render () &#123;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;ul&gt;</div><div class=\"line\">        &#123;</div><div class=\"line\">          this.props.items.map((item) =&gt; &#123;</div><div class=\"line\">            return &lt;li&gt;&#123;item&#125;&lt;/li&gt;</div><div class=\"line\">          &#125;)</div><div class=\"line\">        &#125;</div><div class=\"line\">       &lt;/ul&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">ReactDOM.render(</div><div class=\"line\">  &lt;TodoApp /&gt;,</div><div class=\"line\">  document.getElementById('root')</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n"},{"title":"我的第一篇博客文章","date":"2017-06-23T09:13:02.000Z","_content":"# 1、git提交\n$git add -u //只提交修改过的文件\n$git add -A //全部提交\n$git add -p //对同一个文件进行选择性的提交\n\n# 2、diff\n$git diff\n如果已经git add过，需要加--cached才可以看到\n\n# 3、保存工作进度\n$git stash\n$git checkout <new_branch>\n完成后：\n$git checkout <origin_branch>\n$git stash pop\n\n# 4、代理svn\n$git svn clone <svn_repos_url>\n$git svn fetch\n$git svn rebase\n$git svn dcommit\n\n# 5、分页器\n快捷键\nq - 退出分页器\nh - 显示分页器帮助\n空格 - 下翻一页，b - 上翻一页\nd - 下翻半页，u - 上翻半页\nj - 上翻一行，k - 下翻一行\n左右箭头\n/pattern: 向下寻找和pattern匹配的内容\n?pattern:向上寻找和pattern匹配的内容\nn/N: 向前/向后继续寻找。\ng - 跳到第一行；\nG - 跳到最后一行。\ng + 数字： 跳到相应的行。\n!<command> : 执行Shell命令。","source":"_posts/我的第一篇博客文章.md","raw":"---\ntitle: 我的第一篇博客文章\ndate: 2017-06-23 17:13:02\ntags:\n---\n# 1、git提交\n$git add -u //只提交修改过的文件\n$git add -A //全部提交\n$git add -p //对同一个文件进行选择性的提交\n\n# 2、diff\n$git diff\n如果已经git add过，需要加--cached才可以看到\n\n# 3、保存工作进度\n$git stash\n$git checkout <new_branch>\n完成后：\n$git checkout <origin_branch>\n$git stash pop\n\n# 4、代理svn\n$git svn clone <svn_repos_url>\n$git svn fetch\n$git svn rebase\n$git svn dcommit\n\n# 5、分页器\n快捷键\nq - 退出分页器\nh - 显示分页器帮助\n空格 - 下翻一页，b - 上翻一页\nd - 下翻半页，u - 上翻半页\nj - 上翻一行，k - 下翻一行\n左右箭头\n/pattern: 向下寻找和pattern匹配的内容\n?pattern:向上寻找和pattern匹配的内容\nn/N: 向前/向后继续寻找。\ng - 跳到第一行；\nG - 跳到最后一行。\ng + 数字： 跳到相应的行。\n!<command> : 执行Shell命令。","slug":"我的第一篇博客文章","published":1,"updated":"2017-06-26T04:39:57.548Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4j88qvy0002icqtc08058mt","content":"<h1 id=\"1、git提交\"><a href=\"#1、git提交\" class=\"headerlink\" title=\"1、git提交\"></a>1、git提交</h1><p>$git add -u //只提交修改过的文件<br>$git add -A //全部提交<br>$git add -p //对同一个文件进行选择性的提交</p>\n<h1 id=\"2、diff\"><a href=\"#2、diff\" class=\"headerlink\" title=\"2、diff\"></a>2、diff</h1><p>$git diff<br>如果已经git add过，需要加–cached才可以看到</p>\n<h1 id=\"3、保存工作进度\"><a href=\"#3、保存工作进度\" class=\"headerlink\" title=\"3、保存工作进度\"></a>3、保存工作进度</h1><p>$git stash<br>$git checkout <new_branch><br>完成后：<br>$git checkout <origin_branch><br>$git stash pop</origin_branch></new_branch></p>\n<h1 id=\"4、代理svn\"><a href=\"#4、代理svn\" class=\"headerlink\" title=\"4、代理svn\"></a>4、代理svn</h1><p>$git svn clone <svn_repos_url><br>$git svn fetch<br>$git svn rebase<br>$git svn dcommit</svn_repos_url></p>\n<h1 id=\"5、分页器\"><a href=\"#5、分页器\" class=\"headerlink\" title=\"5、分页器\"></a>5、分页器</h1><p>快捷键<br>q - 退出分页器<br>h - 显示分页器帮助<br>空格 - 下翻一页，b - 上翻一页<br>d - 下翻半页，u - 上翻半页<br>j - 上翻一行，k - 下翻一行<br>左右箭头<br>/pattern: 向下寻找和pattern匹配的内容<br>?pattern:向上寻找和pattern匹配的内容<br>n/N: 向前/向后继续寻找。<br>g - 跳到第一行；<br>G - 跳到最后一行。<br>g + 数字： 跳到相应的行。<br>!<command> : 执行Shell命令。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1、git提交\"><a href=\"#1、git提交\" class=\"headerlink\" title=\"1、git提交\"></a>1、git提交</h1><p>$git add -u //只提交修改过的文件<br>$git add -A //全部提交<br>$git add -p //对同一个文件进行选择性的提交</p>\n<h1 id=\"2、diff\"><a href=\"#2、diff\" class=\"headerlink\" title=\"2、diff\"></a>2、diff</h1><p>$git diff<br>如果已经git add过，需要加–cached才可以看到</p>\n<h1 id=\"3、保存工作进度\"><a href=\"#3、保存工作进度\" class=\"headerlink\" title=\"3、保存工作进度\"></a>3、保存工作进度</h1><p>$git stash<br>$git checkout <new_branch><br>完成后：<br>$git checkout <origin_branch><br>$git stash pop</origin_branch></new_branch></p>\n<h1 id=\"4、代理svn\"><a href=\"#4、代理svn\" class=\"headerlink\" title=\"4、代理svn\"></a>4、代理svn</h1><p>$git svn clone <svn_repos_url><br>$git svn fetch<br>$git svn rebase<br>$git svn dcommit</svn_repos_url></p>\n<h1 id=\"5、分页器\"><a href=\"#5、分页器\" class=\"headerlink\" title=\"5、分页器\"></a>5、分页器</h1><p>快捷键<br>q - 退出分页器<br>h - 显示分页器帮助<br>空格 - 下翻一页，b - 上翻一页<br>d - 下翻半页，u - 上翻半页<br>j - 上翻一行，k - 下翻一行<br>左右箭头<br>/pattern: 向下寻找和pattern匹配的内容<br>?pattern:向上寻找和pattern匹配的内容<br>n/N: 向前/向后继续寻找。<br>g - 跳到第一行；<br>G - 跳到最后一行。<br>g + 数字： 跳到相应的行。<br>!<command> : 执行Shell命令。</p>\n"},{"title":"hexo的简单使用","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: hexo的简单使用\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-06-23T09:55:20.921Z","updated":"2017-06-26T03:18:59.701Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4j88qwe0003icqt5wso4gil","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}